from config import *
from db import *

bot = Bot(token=TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n"
                         f"..............\n"
                         f"..............", reply_markup=take_code_markup)


class Form_get_PHONE_NUMBER(StatesGroup):
    name = State()


@dp.message_handler(content_types=['contact', 'text'], state=Form_get_PHONE_NUMBER.name)
async def get_PHONE_NUMBER(message: types.Contact, state: FSMContext):
    await state.finish()
    if message.text == '/cancel' or message.text == '/menu' or message.text == '/start':
        await start(message)

    elif message.contact is not None:        
        if message.contact.user_id == message.from_user.id:
            verification_code = give_code()
            save_auth_dates(create_connection(), message.contact.phone_number.replace('+',''), verification_code)
            await message.answer(f"–û—Ç–ª–∏—á–Ω–æ\n"
                                f"–í–∞—à –∫–æ–¥: <code>{verification_code}</code>\n"
                                f"–í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏", reply_markup=types.ReplyKeyboardRemove(), parse_mode = 'html')
        else:
            await message.answer(f"–ù–æ–º–µ—Ä –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –¥—Ä—É–≥–æ–º—É —á–µ–ª–æ–≤–µ–∫—É, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä")
            await state.set_state(Form_get_PHONE_NUMBER.name)

    else:
        await message.answer("–ù–µ –ø–æ–Ω—è–ª –≤–æ–ø—Ä–æ—Å, –æ—Ç–ø—Ä–∞–≤—Ç–µ –Ω–æ–º–µ—Ä, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É\n"
                             "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã")



@dp.callback_query_handler()
async def process_callback_take_code(callback: types.CallbackQuery, state: FSMContext) -> None:
    if callback.data == 'take_code':
        await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
        await bot.send_message(callback.from_user.id, text='–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è,'
                                            '–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"üëáüèª',
                               reply_markup=markup_number)

        await state.set_state(Form_get_PHONE_NUMBER.name)















if __name__ == '__main__':
    print("Bot is working")
    executor.start_polling(dp)